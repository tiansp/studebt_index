"""
function: Producing Random Data for Lab
@author: Big Data
@time: 2020-9-25
"""


import random
import pickle
from student import Student


families = [
    "唐", "淦", "张", "薛", "冯", "黄", "贺", "纪", "裴", "徐",
    "肖", "廖", "周", "宋", "占", "余", "储", "邹", "俞", "霍",
    "庄", "邱", "韩", "何", "苗", "李", "殷", "念", "柯", "颜",
    "金", "钟", "白", "汪", "熊", "龙", "田", "华", "康", "尹",
    "兰", "戴", "姚", "郑", "梁", "宁", "涂", "丁", "向", "翁",
    "范", "方", "姜", "邓", "阮", "高", "管", "曹", "秦", "蒋",
    "夏", "吕", "刘", "胡", "曾", "檀", "缪", "赖", "包", "林",
    "王", "倪", "赵", "沈", "谌", "雷", "袁", "谢", "杨", "江",
    "陈", "甘", "仵", "叶", "魏", "卢", "孟", "樊", "艾", "毛",
    "许", "郭", "陆", "温", "罗", "阙", "冷", "祁", "洪", "佘",
    "吴", "苟", "傅", "游", "彭", "蔡", "严", "连", "付", "钱",
    "尤", "马", "苏", "麻", "朱", "潘"]

second_names = [
    "晨茜", "继发", "少捷", "文凤", "元荧", "晰", "志明", "奇聪", "志勇", "雨欣",
    "俊", "强强", "志军", "星宇", "锦辉", "泽祺", "忠发", "丽", "万炜", "顺",
    "玲明", "淑莲", "志辉", "芳伟", "辰禧", "晨俣", "锦绣", "庆威", "磊", "海燕",
    "平", "琦智", "宇", "涵", "旺兴", "雪颖", "雪燕", "新耀", "进祥", "良伟",
    "文豪", "毅斌", "臻裕", "福川", "万立", "宇翔", "炜冰", "伟聪", "世乾", "黄敏",
    "俊延", "振钰", "伟彬", "子颖", "西龙", "大庆", "天雪", "剑祥", "丛丛", "耿杰",
    "思汗", "柏旭", "高", "孔铭", "海涵", "学杭", "晓威", "浩", "晶", "鑫强",
    "雪清", "鑫", "锦强", "锦贤", "鑫伟", "建宇", "光隆", "华杰", "世威", "志钦",
    "渊", "科昱", "智鹏", "启", "俊洋", "想", "诗雨", "景杰", "建光", "君临",
    "洋艺", "晨婧", "鸿盛", "金东", "汉卿", "锦扬", "荣杰", "溢婷", "承龙", "燕琳",
    "秋琳", "梦婷", "雄杰", "琳", "泽林", "志华", "宝林", "楚纯", "雨", "君淮",
    "凤华", "璟", "大款", "立婷", "丽莉", "永祺", "汶泽", "万声", "鹏昕", "金隆",
    "庆梦", "琴", "恺锋", "敏亮", "鑫淼", "佳雪", "胜", "泽奇", "绍武", "建雄",
    "杭兴", "良玉", "波", "虹婷", "坤铭", "元彬", "聪", "屿", "梦柔", "偲涵",
    "万方", "辉林", "先顺", "金汶", "瀚", "武", "一涵", "翔", "龙欢", "刚",
    "豪", "敏杰", "小娟", "晓娥", "毅聪", "星", "俣", "少鹏", "腾禹", "栋辉",
    "时烽", "晨焜", "珊珊", "登承", "鹏翔", "强弟", "凯", "益梅", "秀莲", "佳欣",
    "启星", "建辉", "灿", "明皇", "伟涵", "智杰", "云峰", "辰熙", "瑞源", "阳雄",
    "运康", "双双", "昊明", "自强", "育锋", "江宇", "智敏", "奇特", "民丞", "兆伟",
    "佳毫", "健", "雅婷", "桂敏", "焱", "嫣", "铭煊", "龙", "凡凡", "秉仁",
    "国强", "勋勋", "超", "前进", "胜坤", "晓芳", "金寿", "绍函", "琼", "少龙",
    "连威", "坤鹏", "凯文", "奇", "一星", "文在", "维屏", "钦腾", "棋淋", "震霖",
    "嘉宏", "辉", "夏诚", "亚涛", "春香", "艳超", "志豪", "昌豪", "星月", "伊晴",
    "林锋", "思勤", "佳敏", "敏辉", "伟斌", "文超", "婷艳", "炜强", "建民", "呈和",
    "海威", "志伟", "伟", "佳琪", "航", "晓光", "子恺", "爱丽", "昌胜", "佳良",
    "旺玉", "亚龙", "碧瑶", "艳勋", "杰民", "亦楠", "海涛", "帅", "宇航", "向新",
    "志涛", "章辉", "百全", "士博", "震宇", "成鑫", "梦科", "学渊", "世民", "雪风",
    "伟凡", "涛", "兆铂", "文龙", "家曜", "俊毅", "闻", "毅恒", "艺超", "进强",
    "钢波", "达", "淦", "炜杰", "海翔", "尹铭", "炜煌", "文越", "钊", "福生",
    "凤光", "嘉荣", "硕", "帅杰", "汪洋", "子傑", "柏铭", "清雯", "清伟", "德材",
    "文卓", "佳旺", "耿耿", "彰延", "晖龙", "诗瑶", "德育", "祥税", "守淳", "雨晴",
    "森", "成", "德隆", "俊平", "灵杰", "河涌", "培伟", "煜南", "靖鑫", "佳婷",
    "锦灿", "华贞", "德燕", "梓强", "美飘", "灵雨", "毅", "小钗", "欣怡", "舟宇",
    "忠原", "丹", "明亮", "源林", "艺玲", "康博", "鹏", "蝶萍", "泽鸿", "伟民",
    "炳峰", "群平", "名瑶", "权睿", "建林", "建钧", "智清", "文地", "桂汝", "睿源",
    "天赐", "梦云", "佳俊", "俊豪", "云霞", "俊标", "达兴", "志朋", "贵枝", "振舟",
    "少锋", "梓梁", "承旭", "思瑶", "顺杰", "殷杰", "勇艺", "羽诗", "梦阳", "博",
    "亮", "钰", "仁勇", "宇强", "晖镇", "枇珊", "泽龙", "腾飞", "庆高", "江川",
    "斌", "湑", "丽敏", "旭峰", "宇辉", "少聪", "清凡", "灿雄", "冯文", "劲光",
    "荣嘉", "晓瑜", "飞", "旺", "慧东", "根珠", "雨峰", "炳煌", "礼燕", "俊鸿",
    "阳霖", "心如", "明彬", "杰贤", "文武", "茗捷", "诗语", "渝杰", "旭灿", "雨婷",
    "海鑫", "建聪", "贤炯", "耀炜", "彬", "嘉敏", "智伟", "嘉杰", "水露", "伟华",
    "泽超", "键鹰", "腾旺", "丹琳", "凌炜", "青青", "鸿富", "伟恒", "奇鹏", "佳明",
    "钊旸", "剑彬", "哲", "兴", "新泽", "湧", "美锦", "炜涵", "承达", "腾",
    "伟建", "震", "晨颖", "建文", "琦", "扬", "凌瑞", "雨明", "梦瑶", "祯杰",
    "伟真", "尧", "碗强", "倩", "茂荣", "炜铖", "海祥", "佳键", "振华", "建",
    "琳琳", "雍强", "嘉焌", "紫娴", "瑞强", "炳壹", "建阳", "算"]

majors = ["数据科学与大数据技术", "智能科学与技术", "软件工程", "物联网工程", "机器人工程"]

_classes = ["数据", "智能", "软工", "物联", "机器"]

cnum = 8

grades = ["2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020",
          "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030",
          "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040"]

sexuals = ['男', '女']

snum = 90      # 班级人数

fnum = len(families) - 1

snnum =len(second_names) - 1

f = open('student.db', 'wb')
y = 0
size = 300
for grade in grades:
    c = grade[2:]
    for i in range(1, len(majors) + 1):
        for j in range(1, cnum + 1):
            for k in range(1, snum + 1):
                if k > 9:
                    x = "%s" % k
                else:
                    x = "0%s" % k
                sid = grade + "0%s%s%s%s" % (i, c, j, x)    # 20180118105
                name = families[random.randint(0, fnum)] + second_names[random.randint(0, snnum)]
                sexual = sexuals[random.randint(0, 1)]
                _class = _classes[i - 1] + c + "%s" %j
                major = majors[i - 1]
                stu = Student(sid, name, sexual, grade, _class, major)
                pickle.dump(stu, f)
                y += 1
                f.seek(y * size)
                print("%s %s %s %s %s %s" % (sid, name, sexual, grade, _class, major))
f.close()

